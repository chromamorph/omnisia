//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.musicxml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for wood-value.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>{@code
 * <simpleType name="wood-value">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="bamboo scraper"/>
 *     <enumeration value="board clapper"/>
 *     <enumeration value="cabasa"/>
 *     <enumeration value="castanets"/>
 *     <enumeration value="castanets with handle"/>
 *     <enumeration value="claves"/>
 *     <enumeration value="football rattle"/>
 *     <enumeration value="guiro"/>
 *     <enumeration value="log drum"/>
 *     <enumeration value="maraca"/>
 *     <enumeration value="maracas"/>
 *     <enumeration value="quijada"/>
 *     <enumeration value="rainstick"/>
 *     <enumeration value="ratchet"/>
 *     <enumeration value="reco-reco"/>
 *     <enumeration value="sandpaper blocks"/>
 *     <enumeration value="slit drum"/>
 *     <enumeration value="temple block"/>
 *     <enumeration value="vibraslap"/>
 *     <enumeration value="whip"/>
 *     <enumeration value="wood block"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "wood-value")
@XmlEnum
public enum WoodValue {

    @XmlEnumValue("bamboo scraper")
    BAMBOO_SCRAPER("bamboo scraper"),
    @XmlEnumValue("board clapper")
    BOARD_CLAPPER("board clapper"),
    @XmlEnumValue("cabasa")
    CABASA("cabasa"),
    @XmlEnumValue("castanets")
    CASTANETS("castanets"),
    @XmlEnumValue("castanets with handle")
    CASTANETS_WITH_HANDLE("castanets with handle"),
    @XmlEnumValue("claves")
    CLAVES("claves"),
    @XmlEnumValue("football rattle")
    FOOTBALL_RATTLE("football rattle"),
    @XmlEnumValue("guiro")
    GUIRO("guiro"),
    @XmlEnumValue("log drum")
    LOG_DRUM("log drum"),
    @XmlEnumValue("maraca")
    MARACA("maraca"),
    @XmlEnumValue("maracas")
    MARACAS("maracas"),
    @XmlEnumValue("quijada")
    QUIJADA("quijada"),
    @XmlEnumValue("rainstick")
    RAINSTICK("rainstick"),
    @XmlEnumValue("ratchet")
    RATCHET("ratchet"),
    @XmlEnumValue("reco-reco")
    RECO_RECO("reco-reco"),
    @XmlEnumValue("sandpaper blocks")
    SANDPAPER_BLOCKS("sandpaper blocks"),
    @XmlEnumValue("slit drum")
    SLIT_DRUM("slit drum"),
    @XmlEnumValue("temple block")
    TEMPLE_BLOCK("temple block"),
    @XmlEnumValue("vibraslap")
    VIBRASLAP("vibraslap"),
    @XmlEnumValue("whip")
    WHIP("whip"),
    @XmlEnumValue("wood block")
    WOOD_BLOCK("wood block");
    private final java.lang.String value;

    WoodValue(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static WoodValue fromValue(java.lang.String v) {
        for (WoodValue c: WoodValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
