//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.musicxml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for membrane-value.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>{@code
 * <simpleType name="membrane-value">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="bass drum"/>
 *     <enumeration value="bass drum on side"/>
 *     <enumeration value="bongos"/>
 *     <enumeration value="Chinese tomtom"/>
 *     <enumeration value="conga drum"/>
 *     <enumeration value="cuica"/>
 *     <enumeration value="goblet drum"/>
 *     <enumeration value="Indo-American tomtom"/>
 *     <enumeration value="Japanese tomtom"/>
 *     <enumeration value="military drum"/>
 *     <enumeration value="snare drum"/>
 *     <enumeration value="snare drum snares off"/>
 *     <enumeration value="tabla"/>
 *     <enumeration value="tambourine"/>
 *     <enumeration value="tenor drum"/>
 *     <enumeration value="timbales"/>
 *     <enumeration value="tomtom"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "membrane-value")
@XmlEnum
public enum MembraneValue {

    @XmlEnumValue("bass drum")
    BASS_DRUM("bass drum"),
    @XmlEnumValue("bass drum on side")
    BASS_DRUM_ON_SIDE("bass drum on side"),
    @XmlEnumValue("bongos")
    BONGOS("bongos"),
    @XmlEnumValue("Chinese tomtom")
    CHINESE_TOMTOM("Chinese tomtom"),
    @XmlEnumValue("conga drum")
    CONGA_DRUM("conga drum"),
    @XmlEnumValue("cuica")
    CUICA("cuica"),
    @XmlEnumValue("goblet drum")
    GOBLET_DRUM("goblet drum"),
    @XmlEnumValue("Indo-American tomtom")
    INDO_AMERICAN_TOMTOM("Indo-American tomtom"),
    @XmlEnumValue("Japanese tomtom")
    JAPANESE_TOMTOM("Japanese tomtom"),
    @XmlEnumValue("military drum")
    MILITARY_DRUM("military drum"),
    @XmlEnumValue("snare drum")
    SNARE_DRUM("snare drum"),
    @XmlEnumValue("snare drum snares off")
    SNARE_DRUM_SNARES_OFF("snare drum snares off"),
    @XmlEnumValue("tabla")
    TABLA("tabla"),
    @XmlEnumValue("tambourine")
    TAMBOURINE("tambourine"),
    @XmlEnumValue("tenor drum")
    TENOR_DRUM("tenor drum"),
    @XmlEnumValue("timbales")
    TIMBALES("timbales"),
    @XmlEnumValue("tomtom")
    TOMTOM("tomtom");
    private final java.lang.String value;

    MembraneValue(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static MembraneValue fromValue(java.lang.String v) {
        for (MembraneValue c: MembraneValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
