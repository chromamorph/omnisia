//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.musicxml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for kind-value.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>{@code
 * <simpleType name="kind-value">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="major"/>
 *     <enumeration value="minor"/>
 *     <enumeration value="augmented"/>
 *     <enumeration value="diminished"/>
 *     <enumeration value="dominant"/>
 *     <enumeration value="major-seventh"/>
 *     <enumeration value="minor-seventh"/>
 *     <enumeration value="diminished-seventh"/>
 *     <enumeration value="augmented-seventh"/>
 *     <enumeration value="half-diminished"/>
 *     <enumeration value="major-minor"/>
 *     <enumeration value="major-sixth"/>
 *     <enumeration value="minor-sixth"/>
 *     <enumeration value="dominant-ninth"/>
 *     <enumeration value="major-ninth"/>
 *     <enumeration value="minor-ninth"/>
 *     <enumeration value="dominant-11th"/>
 *     <enumeration value="major-11th"/>
 *     <enumeration value="minor-11th"/>
 *     <enumeration value="dominant-13th"/>
 *     <enumeration value="major-13th"/>
 *     <enumeration value="minor-13th"/>
 *     <enumeration value="suspended-second"/>
 *     <enumeration value="suspended-fourth"/>
 *     <enumeration value="Neapolitan"/>
 *     <enumeration value="Italian"/>
 *     <enumeration value="French"/>
 *     <enumeration value="German"/>
 *     <enumeration value="pedal"/>
 *     <enumeration value="power"/>
 *     <enumeration value="Tristan"/>
 *     <enumeration value="other"/>
 *     <enumeration value="none"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "kind-value")
@XmlEnum
public enum KindValue {

    @XmlEnumValue("major")
    MAJOR("major"),
    @XmlEnumValue("minor")
    MINOR("minor"),
    @XmlEnumValue("augmented")
    AUGMENTED("augmented"),
    @XmlEnumValue("diminished")
    DIMINISHED("diminished"),
    @XmlEnumValue("dominant")
    DOMINANT("dominant"),
    @XmlEnumValue("major-seventh")
    MAJOR_SEVENTH("major-seventh"),
    @XmlEnumValue("minor-seventh")
    MINOR_SEVENTH("minor-seventh"),
    @XmlEnumValue("diminished-seventh")
    DIMINISHED_SEVENTH("diminished-seventh"),
    @XmlEnumValue("augmented-seventh")
    AUGMENTED_SEVENTH("augmented-seventh"),
    @XmlEnumValue("half-diminished")
    HALF_DIMINISHED("half-diminished"),
    @XmlEnumValue("major-minor")
    MAJOR_MINOR("major-minor"),
    @XmlEnumValue("major-sixth")
    MAJOR_SIXTH("major-sixth"),
    @XmlEnumValue("minor-sixth")
    MINOR_SIXTH("minor-sixth"),
    @XmlEnumValue("dominant-ninth")
    DOMINANT_NINTH("dominant-ninth"),
    @XmlEnumValue("major-ninth")
    MAJOR_NINTH("major-ninth"),
    @XmlEnumValue("minor-ninth")
    MINOR_NINTH("minor-ninth"),
    @XmlEnumValue("dominant-11th")
    DOMINANT_11_TH("dominant-11th"),
    @XmlEnumValue("major-11th")
    MAJOR_11_TH("major-11th"),
    @XmlEnumValue("minor-11th")
    MINOR_11_TH("minor-11th"),
    @XmlEnumValue("dominant-13th")
    DOMINANT_13_TH("dominant-13th"),
    @XmlEnumValue("major-13th")
    MAJOR_13_TH("major-13th"),
    @XmlEnumValue("minor-13th")
    MINOR_13_TH("minor-13th"),
    @XmlEnumValue("suspended-second")
    SUSPENDED_SECOND("suspended-second"),
    @XmlEnumValue("suspended-fourth")
    SUSPENDED_FOURTH("suspended-fourth"),
    @XmlEnumValue("Neapolitan")
    NEAPOLITAN("Neapolitan"),
    @XmlEnumValue("Italian")
    ITALIAN("Italian"),
    @XmlEnumValue("French")
    FRENCH("French"),
    @XmlEnumValue("German")
    GERMAN("German"),
    @XmlEnumValue("pedal")
    PEDAL("pedal"),
    @XmlEnumValue("power")
    POWER("power"),
    @XmlEnumValue("Tristan")
    TRISTAN("Tristan"),
    @XmlEnumValue("other")
    OTHER("other"),
    @XmlEnumValue("none")
    NONE("none");
    private final java.lang.String value;

    KindValue(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static KindValue fromValue(java.lang.String v) {
        for (KindValue c: KindValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
