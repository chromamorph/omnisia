//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.musicxml;

import java.math.BigInteger;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * The swing element specifies whether or not to use swing playback, where consecutive on-beat / off-beat eighth or 16th notes are played with unequal nominal durations. 
 * 
 * The straight element specifies that no swing is present, so consecutive notes have equal durations.
 * 
 * The first and second elements are positive integers that specify the ratio between durations of consecutive notes. For example, a first element with a value of 2 and a second element with a value of 1 applied to eighth notes specifies a quarter note / eighth note tuplet playback, where the first note is twice as long as the second note. Ratios should be specified with the smallest integers possible. For example, a ratio of 6 to 4 should be specified as 3 to 2 instead.
 * 
 * The optional swing-type element specifies the note type, either eighth or 16th, to which the ratio is applied. The value is eighth if this element is not present.
 * 
 * The optional swing-style element is a string describing the style of swing used.
 * 
 * The swing element has no effect for playback of grace notes, notes where a type element is not present, and notes where the specified duration is different than the nominal value associated with the specified type. If a swung note has attack and release attributes, those values modify the swung playback.
 * 
 * <p>Java class for swing complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="swing">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <choice>
 *           <element name="straight" type="{}empty"/>
 *           <sequence>
 *             <element name="first" type="{http://www.w3.org/2001/XMLSchema}positiveInteger"/>
 *             <element name="second" type="{http://www.w3.org/2001/XMLSchema}positiveInteger"/>
 *             <element name="swing-type" type="{}swing-type-value" minOccurs="0"/>
 *           </sequence>
 *         </choice>
 *         <element name="swing-style" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "swing", propOrder = {
    "straight",
    "first",
    "second",
    "swingType",
    "swingStyle"
})
public class Swing {

    protected Empty straight;
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger first;
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger second;
    @XmlElement(name = "swing-type")
    protected java.lang.String swingType;
    @XmlElement(name = "swing-style")
    protected java.lang.String swingStyle;

    /**
     * Gets the value of the straight property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getStraight() {
        return straight;
    }

    /**
     * Sets the value of the straight property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setStraight(Empty value) {
        this.straight = value;
    }

    /**
     * Gets the value of the first property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getFirst() {
        return first;
    }

    /**
     * Sets the value of the first property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setFirst(BigInteger value) {
        this.first = value;
    }

    /**
     * Gets the value of the second property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSecond() {
        return second;
    }

    /**
     * Sets the value of the second property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSecond(BigInteger value) {
        this.second = value;
    }

    /**
     * Gets the value of the swingType property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getSwingType() {
        return swingType;
    }

    /**
     * Sets the value of the swingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setSwingType(java.lang.String value) {
        this.swingType = value;
    }

    /**
     * Gets the value of the swingStyle property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getSwingStyle() {
        return swingStyle;
    }

    /**
     * Sets the value of the swingStyle property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setSwingStyle(java.lang.String value) {
        this.swingStyle = value;
    }

}
