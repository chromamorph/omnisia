//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.musicxml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for enclosure-shape.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>{@code
 * <simpleType name="enclosure-shape">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     <enumeration value="rectangle"/>
 *     <enumeration value="square"/>
 *     <enumeration value="oval"/>
 *     <enumeration value="circle"/>
 *     <enumeration value="bracket"/>
 *     <enumeration value="inverted-bracket"/>
 *     <enumeration value="triangle"/>
 *     <enumeration value="diamond"/>
 *     <enumeration value="pentagon"/>
 *     <enumeration value="hexagon"/>
 *     <enumeration value="heptagon"/>
 *     <enumeration value="octagon"/>
 *     <enumeration value="nonagon"/>
 *     <enumeration value="decagon"/>
 *     <enumeration value="none"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "enclosure-shape")
@XmlEnum
public enum EnclosureShape {

    @XmlEnumValue("rectangle")
    RECTANGLE("rectangle"),
    @XmlEnumValue("square")
    SQUARE("square"),
    @XmlEnumValue("oval")
    OVAL("oval"),
    @XmlEnumValue("circle")
    CIRCLE("circle"),
    @XmlEnumValue("bracket")
    BRACKET("bracket"),
    @XmlEnumValue("inverted-bracket")
    INVERTED_BRACKET("inverted-bracket"),
    @XmlEnumValue("triangle")
    TRIANGLE("triangle"),
    @XmlEnumValue("diamond")
    DIAMOND("diamond"),
    @XmlEnumValue("pentagon")
    PENTAGON("pentagon"),
    @XmlEnumValue("hexagon")
    HEXAGON("hexagon"),
    @XmlEnumValue("heptagon")
    HEPTAGON("heptagon"),
    @XmlEnumValue("octagon")
    OCTAGON("octagon"),
    @XmlEnumValue("nonagon")
    NONAGON("nonagon"),
    @XmlEnumValue("decagon")
    DECAGON("decagon"),
    @XmlEnumValue("none")
    NONE("none");
    private final java.lang.String value;

    EnclosureShape(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static EnclosureShape fromValue(java.lang.String v) {
        for (EnclosureShape c: EnclosureShape.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
