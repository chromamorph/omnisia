//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.musicxml;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * The credit type represents the appearance of the title, composer, arranger, lyricist, copyright, dedication, and other text, symbols, and graphics that commonly appear on the first page of a score. The credit-words, credit-symbol, and credit-image elements are similar to the words, symbol, and image elements for directions. However, since the credit is not part of a measure, the default-x and default-y attributes adjust the origin relative to the bottom left-hand corner of the page. The enclosure for credit-words and credit-symbol is none by default.
 * 
 * By default, a series of credit-words and credit-symbol elements within a single credit element follow one another in sequence visually. Non-positional formatting attributes are carried over from the previous element by default.
 * 
 * The page attribute for the credit element specifies the page number where the credit should appear. This is an integer value that starts with 1 for the first page. Its value is 1 by default. Since credits occur before the music, these page numbers do not refer to the page numbering specified by the print element's page-number attribute.
 * 
 * The credit-type element indicates the purpose behind a credit. Multiple types of data may be combined in a single credit, so multiple elements may be used. Standard values include page number, title, subtitle, composer, arranger, lyricist, rights, and part name.
 * 
 * 
 * <p>Java class for credit complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="credit">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="credit-type" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="link" type="{}link" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="bookmark" type="{}bookmark" maxOccurs="unbounded" minOccurs="0"/>
 *         <choice>
 *           <element name="credit-image" type="{}image"/>
 *           <sequence>
 *             <choice>
 *               <element name="credit-words" type="{}formatted-text-id"/>
 *               <element name="credit-symbol" type="{}formatted-symbol-id"/>
 *             </choice>
 *             <sequence maxOccurs="unbounded" minOccurs="0">
 *               <element name="link" type="{}link" maxOccurs="unbounded" minOccurs="0"/>
 *               <element name="bookmark" type="{}bookmark" maxOccurs="unbounded" minOccurs="0"/>
 *               <choice>
 *                 <element name="credit-words" type="{}formatted-text-id"/>
 *                 <element name="credit-symbol" type="{}formatted-symbol-id"/>
 *               </choice>
 *             </sequence>
 *           </sequence>
 *         </choice>
 *       </sequence>
 *       <attGroup ref="{}optional-unique-id"/>
 *       <attribute name="page" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "credit", propOrder = {
    "creditType",
    "firstLink",
    "firstBookmark",
    "creditImage",
    "creditWords",
    "creditSymbol",
    "linkAndBookmarkAndCreditWords"
})
public class Credit {

    @XmlElement(name = "credit-type")
    protected List<java.lang.String> creditType;
    @XmlElement(name = "link")
    protected List<Link> firstLink;
    @XmlElement(name = "bookmark")
    protected List<Bookmark> firstBookmark;
    @XmlElement(name = "credit-image")
    protected Image creditImage;
    @XmlElement(name = "credit-words")
    protected FormattedTextId creditWords;
    @XmlElement(name = "credit-symbol")
    protected FormattedSymbolId creditSymbol;
    @XmlElements({
        @XmlElement(name = "link", type = Link.class),
        @XmlElement(name = "bookmark", type = Bookmark.class),
        @XmlElement(name = "credit-words", type = FormattedTextId.class),
        @XmlElement(name = "credit-symbol", type = FormattedSymbolId.class)
    })
    protected List<Object> linkAndBookmarkAndCreditWords;
    @XmlAttribute(name = "page")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger page;
    @XmlAttribute(name = "id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected java.lang.String id;

    /**
     * Gets the value of the creditType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the creditType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCreditType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link java.lang.String }
     * 
     * 
     * @return
     *     The value of the creditType property.
     */
    public List<java.lang.String> getCreditType() {
        if (creditType == null) {
            creditType = new ArrayList<>();
        }
        return this.creditType;
    }

    /**
     * Gets the value of the firstLink property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the firstLink property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFirstLink().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Link }
     * 
     * 
     * @return
     *     The value of the firstLink property.
     */
    public List<Link> getFirstLink() {
        if (firstLink == null) {
            firstLink = new ArrayList<>();
        }
        return this.firstLink;
    }

    /**
     * Gets the value of the firstBookmark property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the firstBookmark property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFirstBookmark().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Bookmark }
     * 
     * 
     * @return
     *     The value of the firstBookmark property.
     */
    public List<Bookmark> getFirstBookmark() {
        if (firstBookmark == null) {
            firstBookmark = new ArrayList<>();
        }
        return this.firstBookmark;
    }

    /**
     * Gets the value of the creditImage property.
     * 
     * @return
     *     possible object is
     *     {@link Image }
     *     
     */
    public Image getCreditImage() {
        return creditImage;
    }

    /**
     * Sets the value of the creditImage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Image }
     *     
     */
    public void setCreditImage(Image value) {
        this.creditImage = value;
    }

    /**
     * Gets the value of the creditWords property.
     * 
     * @return
     *     possible object is
     *     {@link FormattedTextId }
     *     
     */
    public FormattedTextId getCreditWords() {
        return creditWords;
    }

    /**
     * Sets the value of the creditWords property.
     * 
     * @param value
     *     allowed object is
     *     {@link FormattedTextId }
     *     
     */
    public void setCreditWords(FormattedTextId value) {
        this.creditWords = value;
    }

    /**
     * Gets the value of the creditSymbol property.
     * 
     * @return
     *     possible object is
     *     {@link FormattedSymbolId }
     *     
     */
    public FormattedSymbolId getCreditSymbol() {
        return creditSymbol;
    }

    /**
     * Sets the value of the creditSymbol property.
     * 
     * @param value
     *     allowed object is
     *     {@link FormattedSymbolId }
     *     
     */
    public void setCreditSymbol(FormattedSymbolId value) {
        this.creditSymbol = value;
    }

    /**
     * Gets the value of the linkAndBookmarkAndCreditWords property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the linkAndBookmarkAndCreditWords property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLinkAndBookmarkAndCreditWords().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Bookmark }
     * {@link FormattedSymbolId }
     * {@link FormattedTextId }
     * {@link Link }
     * 
     * 
     * @return
     *     The value of the linkAndBookmarkAndCreditWords property.
     */
    public List<Object> getLinkAndBookmarkAndCreditWords() {
        if (linkAndBookmarkAndCreditWords == null) {
            linkAndBookmarkAndCreditWords = new ArrayList<>();
        }
        return this.linkAndBookmarkAndCreditWords;
    }

    /**
     * Gets the value of the page property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPage() {
        return page;
    }

    /**
     * Sets the value of the page property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPage(BigInteger value) {
        this.page = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setId(java.lang.String value) {
        this.id = value;
    }

}
