package com.chromamorph.points022;

import java.util.ArrayList;
import java.util.TreeSet;

/**
 * 
 * @author Dave Meredith
 * 
 * Generates a segmentation from a TEC analysis
 * like the ones generated by COSIATEC or
 * SIATECCompress.
 * 
 */
public class SegmentationFromTECAnalysis01 {

	static class Segment {
		String label;
		long start, end;
	}

	static class SegmentBoundary implements Comparable<SegmentBoundary>{
		long location;
		int weight;

		public SegmentBoundary(long location, int weight) {
			this.location = location;
			this.weight = weight;
		}

		@Override
		public int compareTo(SegmentBoundary o) {
			if (o == null) return 1;
			if (location > o.location) return 1;
			if (o.location > location) return -1;
			return 0;
		}

		public boolean equals(Object obj) {
			if (obj == null) return false;
			if (!(obj instanceof SegmentBoundary)) return false;
			return compareTo((SegmentBoundary)obj)==0;
		}

		public void inc() {
			weight++;
		}

		public void inc(int amount) {
			weight += amount;
		}

		public String toString() {
			return "("+location+","+weight+")";
		}
	}

	static String encodingFileName;
	static COSIATECEncoding encoding;
	static TreeSet<SegmentBoundary> segmentBoundaries = new TreeSet<SegmentBoundary>();
	static ArrayList<Segment> segmentation;

	static void readTECAnalysis(String encodingFileName) {
		encoding = new COSIATECEncoding(encodingFileName);
	}

	static void computeSegmentBoundaries() {
		int salience = encoding.getTECs().size();
		for(TEC tec : encoding.getTECs()) {
			for(PointSet ps : tec.getPointSets()) {
				if (ps.size() > 1) {
					SegmentBoundary sb = new SegmentBoundary(ps.first().getX(), ps.size()*salience);
					if (segmentBoundaries.contains(sb))
						segmentBoundaries.floor(sb).inc(ps.size()*salience);
					else
						segmentBoundaries.add(sb);
				}
			}
			salience--;
		}
	}

	static void generateSegmentation() {
		computeSegmentBoundaries();
		System.out.println(segmentBoundaries);
	}

	static void drawSegmentation() {
		
	}
	
	public static void main(String[] args) {
		readTECAnalysis(args[0]);
		generateSegmentation();
		drawSegmentation();
	}
}
